diff --git a/compose/web/Dockerfile b/compose/web/Dockerfile
index c7b752e..b41c84c 100644
--- a/compose/web/Dockerfile
+++ b/compose/web/Dockerfile
@@ -7,7 +7,7 @@ ARG requirements_file
 COPY ./requirements /requirements
 RUN pip install --no-cache-dir -r /requirements/$requirements_file && rm -rf /requirements
 
-COPY ./compose/web/docker-entrypoint.sh ./compose/web/uwsgi.sh /usr/local/bin/
+COPY ./compose/web/docker-entrypoint.sh /usr/local/bin/
 RUN chmod +x -R /usr/local/bin
 
 COPY ./compose/web/start-dev.sh /start-dev.sh
diff --git a/compose/web/uwsgi.sh b/compose/web/uwsgi.sh
deleted file mode 100644
index 0b1d738..0000000
--- a/compose/web/uwsgi.sh
+++ /dev/null
@@ -1,13 +0,0 @@
-#!/bin/sh
-python /app/manage.py collectstatic --noinput
-uwsgi \
-    --chdir=/app \
-    --wsgi-file=/app/config/wsgi.py \
-    --master \
-    --processes=2 \
-    --buffer-size=65535 \
-    --http-socket=0.0.0.0:8000 \
-    --socket=/tmp/uwsgi.sock \
-    --vacuum \
-    --lazy \
-    --lazy-apps \
diff --git a/config/wsgi.py b/config/wsgi.py
deleted file mode 100644
index 0c16e0d..0000000
--- a/config/wsgi.py
+++ /dev/null
@@ -1,38 +0,0 @@
-"""
-WSGI config for Infty project.
-
-This module contains the WSGI application used by Django's development server
-and any production WSGI deployments. It should expose a module-level variable
-named ``application``. Django's ``runserver`` and ``runfcgi`` commands discover
-this application via the ``WSGI_APPLICATION`` setting.
-
-Usually you will have the standard Django WSGI application here, but it also
-might make sense to replace the whole Django WSGI application with a custom one
-that later delegates to the Django one. For example, you could introduce WSGI
-middleware here, or combine a Django application with an application of another
-framework.
-
-"""
-import os
-import sys
-
-from django.core.wsgi import get_wsgi_application
-
-# This allows easy placement of apps within the interior
-# infty directory.
-app_path = os.path.dirname(os.path.abspath(__file__)).replace('/config', '')
-sys.path.append(os.path.join(app_path, 'src'))
-
-# We defer to a DJANGO_SETTINGS_MODULE already in the environment. This breaks
-# if running multiple sites in the same mod_wsgi process. To fix this, use
-# mod_wsgi daemon mode with each site in its own daemon process, or use
-# os.environ["DJANGO_SETTINGS_MODULE"] = "config.settings.production"
-os.environ.setdefault("DJANGO_SETTINGS_MODULE", "config.settings.production")
-
-# This application object is used by any WSGI server configured to use this
-# file. This includes Django's development server, if the WSGI_APPLICATION
-# setting points here.
-application = get_wsgi_application()
-# Apply WSGI middleware here.
-# from helloworld.wsgi import HelloWorldApplication
-# application = HelloWorldApplication(application)
diff --git a/production.yml b/production.yml
index f12a19d..c656fa5 100644
--- a/production.yml
+++ b/production.yml
@@ -61,18 +61,31 @@ services:
       - redis
       - celeryworker
       - celerybeat
-    command: uwsgi.sh
+    command: daphne -b 0.0.0.0 -p 8001 config.asgi:channel_layer
+    env_file:
+      - .env_production
+    volumes:
+      - .:/app
+      - /var/www/static:/app/staticfiles
+  worker:
+    build:
+      context: .
+      dockerfile: ./compose/web/Dockerfile
+      args:
+        requirements_file: production.txt
+    image: infamily/infinity:latest
+    depends_on:
+      - postgres
+      - redis
+      - celeryworker
+      - celerybeat
+    command: python manage.py runworker
     # TODO move it to .env_production file
-    environment:
-      DJANGO_SETTINGS_MODULE: config.settings.production
-      DATABASE_URL: postgres://postgres@postgres:5432/postgres
-      REDIS_URL: redis://redis:6379
-      DJANGO_ADMIN_URL: ^admin/
     env_file:
       - .env_production
     volumes:
+      - .:/app
       - /var/www/static:/app/staticfiles
-
   nginx:
     image: nginx:1.12.1
     depends_on:
