version: '2'

volumes:
  postgres_data: {}
  postgres_backup: {}
  redis_data: {}
  redis_backup: {}

services:
  postgres:
    image: postgres:9.6
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_backup:/backups

  redis:
    image: redis:4.0
    volumes:
      - redis_data:/var/lib/redis
      - redis_backup:/backups

  celeryworker:
    build:
      context: .
      dockerfile: ./compose/web/Dockerfile
      args:
        requirements_file: production.txt
    volumes:
      - .:/app
    depends_on:
     - postgres
     - redis
    command: celery -A infty.celery worker -l INFO --purge
    env_file:
      - .env_production

  celerybeat:
    build:
      context: .
      dockerfile: ./compose/web/Dockerfile
      args:
        requirements_file: production.txt
    volumes:
      - .:/app
    depends_on:
      - postgres
      - redis
    command: celery -A infty.celery beat -l INFO
    env_file:
      - .env_production

  web:
    build:
      context: .
      dockerfile: ./compose/web/Dockerfile
      args:
        requirements_file: production.txt
    image: infamily/infinity:latest
    depends_on:
      - postgres
      - redis
      - celeryworker
      - celerybeat
    command: uwsgi.sh
    # TODO move it to .env_production file
    environment:
      DJANGO_SETTINGS_MODULE: config.settings.production
      DATABASE_URL: postgres://postgres@postgres:5432/postgres
      REDIS_URL: redis://redis:6379
      DJANGO_ADMIN_URL: ^admin/
    env_file:
      - .env_production
    volumes:
      - /var/www/static:/app/staticfiles

  nginx:
    image: nginx:1.12.1
    depends_on:
      - web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./compose/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./compose/nginx/conf.d:/etc/nginx/conf.d:ro
      - /var/log/nginx:/var/log/nginx
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /etc/ssl/certs/:/etc/ssl/certs:ro
      - /var/www/static:/var/www/static
